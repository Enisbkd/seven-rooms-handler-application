# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.sbm.sevenrooms.sevenroomshandler: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  data:
    mongodb:
      uri: mongodb://localhost:27017/sevenRoomsHandlerApplication
  mail:
    host: localhost
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

  kafka:
    bootstrap-servers: bsed1-d1-ap-kafka4.sbm.interne:9092,bsed1-d2-ap-kafka5.sbm.interne:9092,bsed1-d3-ap-kafka6.sbm.interne:9092
    #bootstrap-servers: localhost:9092
    security.protocol: SASL_SSL
    sasl.mechanism: SCRAM-SHA-512
    sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="handler_bsed1_7rooms" password="CTTdUDUkA7";
    ssl.sslTruststoreLocation: /opt/java/openjdk/lib/security/cacerts
    topics:
      client-topic: data-7rooms-client
      reservation-topic: data-7rooms-reservation
      venue-topic: data-7rooms-venue
      venue-topic-deadletters: data-7rooms-venue-deadletters
      gtw-logs-topic: log-7rooms-handler
      gtw-deadletters-topic: data-7rooms-handler-deadletters

  # kafka:
  #   bootstrap-servers: localhost:9092
  #   security.protocol: "PLAINTEXT"
  #   sasl.mechanism: ""
  #   sasl.jaas.config: ""
  #   ssl.sslTruststoreLocation: ""
  #   ssl.sslTruststorePassword: ""
  #   topics:
  #     client-topic: data-7rooms-client
  #     reservation-topic: data-7rooms-reservation
  #     venue-topic: data-7rooms-venue
  #     venue-topic-deadletters: data-7rooms-venue-deadletters
  #     handler-logs-topic: log-7rooms-handler
  #     handler-deadletters-topic: data-7rooms-handler-deadletters

server:
  port: 4040

sevenroomsApi:
  graviteeUrl: 'https://apm-dev0.sbm.interne/sevenrooms-search/v1/'
  api-key: f2fb65b8-c26d-4b91-825a-fbd2f887766d
  clientId: c902f7eb6c38cb7aa6fa4e806995efbb6948185255d735da5b575e780bc4ee6920983ea58f54e4e7a435ea35ab371574bbb99b1d08c5702fa1cf7dafeedf4076
  clientSecret: bedcc8ae3b05175d3876657ce38e263a1380bd2906c7511236eb0c4e89c9c904efcb6b197e4ef9b145c4b5668baf3d6db76c8c7a15ed5115da2d0db26cfdc5bc
  venueGroupId: ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAqODizYQJDA

tibco:
  url: http://esb-st3-ap-tp1.sbm.resort:19000/WS/rest/sevenRooms/clients/v1

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

common:
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:9060,https://localhost:9060,http://localhost:4040,https://localhost:4040'
    # Enable CORS when running in GitHub Codespaces
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${common.clientApp.name}-alert,X-${common.clientApp.name}-error,X-${common.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: ODJjZTZiY2EzZTkyNTJmMTc1ZTI0ZjY1YzViNDcwNzRjMGMyYmQzNmM2MzczZTFkMWNhZTU3N2YxNWQ5ZWEwNjdlOTk2ZmU2MTgyOTI1YTk0OGE5MTZiNjk3YjkxOGNkOWIzYzhkZTU5ZjlkNzEwNjk1ZDU2ZmJkZjQxNzkzNGY=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:4040
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      ring-buffer-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
